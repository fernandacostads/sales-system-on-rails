<%= form_with(model: [:admin, admin_order], class: "contents") do |form| %>
  <% if admin_order.errors.any? %>
    <div id="error_explanation" class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">
      <h2><%= pluralize(admin_order.errors.count, "error") %> proibiu este admin_order se ser salvo:</h2>

      <ul>
        <% admin_order.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="my-5">
    <%= form.label :customer_email, "Email" %>
    <%= form.text_field :customer_email, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" %>
  </div>

  <div class="my-5">
    <%= form.label :fulfilled, "Atendido" %>
    <%= form.check_box :fulfilled, class: "block mt-2 h-5 w-5" %>
  </div>

  <!-- Campos para adicionar produtos ao pedido -->
  <%= form.fields_for :order_items do |order_item_form| %>
    <div class="field">
      <%= order_item_form.label :product_id, "Produto" %>
      <%= order_item_form.select :product_id, Product.all.collect { |p| [p.name, p.id] }, { include_blank: true } %>
      <%= order_item_form.text_field :quantity, placeholder: 'Quantidade' %>
      <span id="product_price_<%= order_item_form.object.object_id %>"></span>
    </div>
  <% end %>

  <!-- Botão para adicionar um novo item de pedido -->
  <div class="actions">
    <%= link_to "Adicionar Item", new_admin_product_path, remote: true %>
  </div>
  <!-- Fim dos campos para adicionar produtos ao pedido -->
  
  <!-- Campos relacionados ao pedido como um todo -->
  <div class="my-5">
    <%= form.label :address, "Endereço" %>
    <%= form.text_field :address, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" %>
  </div>

  <div class="my-5">
    <%= form.label :number_order, "Número do pedido" %>
    <%= form.text_field :number_order, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" %>
  </div>

  <div class="my-5">
    <%= form.label :subtotal, "Subtotal: R$ " %>
    <span id="subtotal_value"></span> 
  </div>

  <div class="my-5"> 
    <%= form.label :subtotal, "Subtotal: R$ " %> |
    <%= form.label :delivery_fee, "Taxa de entrega: R$ " %> |
    <%= form.label :discount, "Desconto (10%): " %> |
    <%= form.label :total_order, "Total do pedido: R$ " %>
    </br>
    <p>** Calculo com base no valor dos itens adicionados ao pedido.</p>
  </div>
  <!-- Fim dos campos relacionados ao pedido como um todo -->

  <div class="inline">
    <%= form.submit "Salvar", class: "rounded-lg py-3 px-5 bg-blue-600 text-white inline-block font-medium cursor-pointer" %>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const productSelect = document.getElementById('order_order_items_attributes_0_product_id');
    const subtotalInput = document.getElementById('subtotal_value');

    if (productSelect && subtotalInput) {
      productSelect.addEventListener('change', function() {
        const productId = this.value;

        // Atualize o subtotal com o preço do produto
        fetch('/admin/orders/get_product_price?product_id=' + productId)
          .then(response => response.json())
          .then(data => {
            const productPrice = data.product_price;
            subtotalInput.textContent = productPrice.toFixed(2); // Exibe o valor do subtotal com duas casas decimais
          });
      });
    }
  });
</script>

</script>

